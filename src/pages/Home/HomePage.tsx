import React, { useEffect, useState } from "react";
import { HomeHeader, Utinities, NewsSection } from "@components";
import PageLayout from "@components/layout/PageLayout";
import { APP_UTINITIES } from "@constants/utinities";
import { useStore } from "@store";
import { Text, Button, Box, Modal, List, Icon } from "zmp-ui";
import { getUserRole } from "@utils/auth";
import { useNavigate } from "react-router-dom";
import { openPhone } from "zmp-sdk";

const RoleSwitcher = () => {
    const { loginAs, currentUser } = useStore((state) => ({
        loginAs: state.loginAs,
        currentUser: state.user,
    }));

    // Ch·ªâ hi·ªÉn th·ªã khi ch·∫°y ·ªü localhost
    if (!import.meta.env.DEV) {
        return null;
    }

    const roles: ("admin" | "mod" | "leader" | "citizen")[] = ["admin", "mod", "leader", "citizen"];
    // ‚úÖ S·ª≠ d·ª•ng getUserRole v·ªõi fallback
    const currentRole = getUserRole(currentUser?.idByOA, currentUser?.id);

    return (
        <Box p={4} className="bg-yellow-100 border-b-2 border-yellow-300">
            <Text.Title size="small">B·∫£ng ƒëi·ªÅu khi·ªÉn DEV</Text.Title>
            <Text size="xSmall" className="text-gray-600 mb-2">
                Vai tr√≤ hi·ªán t·∫°i: <span className="font-bold">{currentRole}</span>
                {currentUser?.name && (
                    <span className="ml-2">({currentUser.name})</span>
                )}
            </Text>
            {/* ‚úÖ Hi·ªÉn th·ªã ID ƒë·ªÉ debug */}
            <Text size="xSmall" className="text-gray-500 mb-2">
                IDs: idByOA={currentUser?.idByOA}, id={currentUser?.id}
            </Text>
            <Box flex className="gap-2 flex-wrap">
                {roles.map((role) => (
                    <Button
                        key={role}
                        size="small"
                        variant={currentRole === role ? "primary" : "secondary"}
                        onClick={() => loginAs(role)}
                    >
                        {role.charAt(0).toUpperCase() + role.slice(1)}
                    </Button>
                ))}
            </Box>
        </Box>
    );
};

const HomePage: React.FunctionComponent = () => {
  const navigate = useNavigate();
  const { organization, getNews } = useStore((state) => ({
    organization: state.organization,
    getNews: state.getNews,
  }));

  // State cho Directory Modal
  const [directoryModalVisible, setDirectoryModalVisible] = useState(false);

  // Danh s√°ch s·ªë ƒëi·ªán tho·∫°i chuy√™n m√¥n
  const directoryOptions = [
    {
      key: "security",
      title: "SƒêT ti·∫øp nh·∫≠n th√¥ng tin v·ªÅ an ninh",
      phoneNumber: "0914537789",
    },
    {
      key: "construction",
      title: "SƒêT ti·∫øp nh·∫≠n th√¥ng tin v·ªÅ x√¢y d·ª±ng, ƒë·∫•t ƒëai", 
      phoneNumber: "0919654433",
    },
    {
      key: "culture",
      title: "SƒêT ti·∫øp nh·∫≠n th√¥ng tin v·ªÅ vƒÉn h√≥a, x√£ h·ªôi",
      phoneNumber: "0945386703", 
    },
    {
      key: "administration",
      title: "SƒêT ti·∫øp nh·∫≠n th√¥ng tin v·ªÅ h√†nh ch√≠nh c√¥ng",
      phoneNumber: "0931372255",
    },
    {
      key: "directory_page",
      title: "Danh b·∫° ph∆∞·ªùng H√† Huy T·∫≠p",
      phoneNumber: null,
    }
  ];

  // H√†m x·ª≠ l√Ω click v√†o item directory
  const handleDirectoryClick = () => {
    setDirectoryModalVisible(true);
  };

  // H√†m x·ª≠ l√Ω click v√†o t·ª´ng option trong modal
  const handleDirectoryOptionClick = (option: {
    key: string;
    title: string;
    phoneNumber: string | null;
    icon: React.ReactElement;
  }) => {
    setDirectoryModalVisible(false);
    
    if (option.phoneNumber) {
      // G·ªçi ƒëi·ªán tho·∫°i
      try {
        openPhone({
          phoneNumber: option.phoneNumber,
          success: () => {
            // eslint-disable-next-line no-console
            console.log(`G·ªçi th√†nh c√¥ng ƒë·∫øn ${option.phoneNumber}`);
          },
          fail: (error) => {
            // eslint-disable-next-line no-console
            console.error("L·ªói khi g·ªçi ƒëi·ªán:", error);
          },
        });
      } catch (error) {
        // eslint-disable-next-line no-console
        console.error("L·ªói khi th·ª±c hi·ªán cu·ªôc g·ªçi:", error);
      }
    } else {
      // Chuy·ªÉn ƒë·∫øn trang danh b·∫° l√£nh ƒë·∫°o ph∆∞·ªùng
      navigate("/directory");
    }
  };

  // T√πy ch·ªânh APP_UTINITIES v·ªõi handler onClick cho directory
  const customUtinities = APP_UTINITIES.map(utility => {
    if (utility.key === "directory") {
      return {
        ...utility,
        onClick: handleDirectoryClick
      };
    }
    return utility;
  });

  useEffect(() => {
    getNews();
  }, [getNews]);

  return (
    <PageLayout
      id="home-page"
      customHeader={
        <HomeHeader
          title="UBND Ph∆∞·ªùng H√† Huy T·∫≠p"
          name={organization?.name || "T·ªânh H√† Tƒ©nh"}
        />
      }
    >
      <RoleSwitcher />
      <Utinities utinities={customUtinities} />
      <NewsSection />

      {/* Directory Modal */}
      <Modal
        visible={directoryModalVisible}
        title="Danh b·∫° li√™n h·ªá"
        onClose={() => setDirectoryModalVisible(false)}
      >
        <List>
          {directoryOptions.map((option) => (
            <List.Item
              key={option.key}
              title={option.title}
              subTitle={option.phoneNumber || "Xem danh s√°ch l√£nh ƒë·∫°o ph∆∞·ªùng"}
              prefix={option.icon}
              suffix={
                option.phoneNumber ? (
                  <Icon icon="zi-call" className="text-blue-600" />
                ) : (
                  <Icon icon="zi-chevron-right" className="text-gray-400" />
                )
              }
              onClick={() => handleDirectoryOptionClick(option)}
            />
          ))}
        </List>
        
        <Box className="mt-4 p-3 bg-blue-50 rounded-lg">
          <Text size="xSmall" className="text-blue-700">
            üí° <strong>Ghi ch√∫:</strong> Nh·∫•n v√†o s·ªë ƒëi·ªán tho·∫°i ƒë·ªÉ g·ªçi tr·ª±c ti·∫øp. 
            Ch·ªçn &quot;Danh b·∫° ph∆∞·ªùng H√† Huy T·∫≠p&quot; ƒë·ªÉ xem th√¥ng tin l√£nh ƒë·∫°o ph∆∞·ªùng.
          </Text>
        </Box>
      </Modal>
    </PageLayout>
  );
};

export default HomePage;